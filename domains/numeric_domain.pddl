(define (domain ai4ro2_E)
    (:requirements :adl :typing :fluents)
    (:types place drink waiter)
    (:predicates 
		(at-waiter ?w - waiter ?t  - place)
        (tray-taken)
		(tray-taken-waiter ?w)
		(tray-empty)
        (tray-carried ?w - waiter)
        (hand-free ?w - waiter)
        (clean ?t - place)
        (ordered ?d - drink ?t - place)
		(has3 ?w - waiter)(has2 ?w - waiter)(has1 ?w - waiter)
		;(table-empty) ;not useful in the main part
		
		(order-ready ?d - drink)
		(order-delivered ?d - drink)
		(order-carried ?d - drink ?w - waiter)
		
		;(hot ?d - drink)
		;(free-barista)
		
		(is-bar ?t - place)
		(empty ?t - place)
	)
	(:functions 
		(distance ?t1 - place ?t2 - place)
		(fl-table-size ?t1 - place)
		(fl-hot ?d - drink)
		;(fl-tray-taken ?w - waiter)
		(time-barista)
		(time-waiter ?w - waiter)
		(time-drink-ready ?d - drink)
	)
	
    ;(:action wait-waiter    
    ;    :parameters  (?w - waiter)
    ;    ;:precondition 	()
    ;    :effect (increase (time-waiter ?w) 1)
	;)
	;(:action wait-barista    
    ;    ;:parameters  ()
    ;    ;:precondition 	()
    ;    :effect (increase (time-barista) 1)
	;)
	(:action prepare
		:parameters (?d - drink)
		:precondition (not (order-ready ?d))
        :effect (and
					(increase (time-barista) (+  3   (* 2 (fl-hot ?d ))  ) )
					(assign (time-drink-ready ?d) (+ (+  3   (* 2 (fl-hot ?d ))  )(time-barista)))
					(order-ready ?d)
				)
	)       

	(:action move-tray  
        :parameters  (?from - place ?to - place ?w - waiter)
        :precondition (and(at-waiter ?w ?from)(tray-taken-waiter ?w))
        :effect (and  (not(at-waiter ?w ?from)) (at-waiter ?w ?to)
						(increase (time-waiter ?w) (distance ?from ?to) )
				)
	)
	(:action move-no-tray   
        :parameters  (?from - place ?to - place ?w - waiter)
        :precondition (and (at-waiter ?w ?from) (not (tray-taken-waiter ?w)))
        :effect (and  (not(at-waiter ?w ?from)) (at-waiter ?w ?to)
						(increase (time-waiter ?w) (/ (distance ?from ?to) 2))
				)
	)
	(:action pick-up-drink    
        :parameters  (?t - place ?w - waiter ?d - drink)
        :precondition 	(and (is-bar ?t)(not (tray-carried ?w))(at-waiter ?w ?t)
						(order-ready ?d)
						(hand-free ?w)
						(>= (time-waiter ?w)(time-drink-ready ?d))
						)
       :effect (and  (not(order-ready ?d))(not (hand-free ?w))
						(order-carried ?d ?w)
				)
	)
	(:action put-down-drink    
        :parameters  (?t - place ?w - waiter ?d - drink)
        :precondition 	(and (ordered ?d ?t)(not (tray-carried ?w))
						(at-waiter ?w ?t)
						(order-carried ?d ?w)
						(<= 4 (* (fl-hot ?d)(- (time-waiter ?w) (time-drink-ready ?d))))
						)
        :effect (and  (not (order-carried ?d ?w))
						(order-delivered ?d)
						(hand-free ?w))
	)
	(:action clean-table   
        :parameters		(?t - place ?w - waiter)
        :precondition	(and (empty ?t)(not (clean ?t))
						(at-waiter ?w ?t) (hand-free ?w)
						(not (tray-taken-waiter w))
						)
        :effect (and  (increase (time-waiter ?w) (* 2 (fl-table-size ?t)))
						(clean ?t)
				)
	)
	(:action pick-2-tray   
        :parameters		(?t - place ?w - waiter ?d1 - drink ?d2 - drink)
        :precondition	(and (is-bar ?t)(at-waiter ?w ?t)
							(hand-free w)(not (tray-taken))(tray-empty)
							(>= (time-waiter ?w)(time-drink-ready ?d1))
							(>= (time-waiter ?w)(time-drink-ready ?d2))
							(order-ready ?d1)(order-ready ?d2)
						)
        :effect (and  (not(order-ready ?d1))(not(order-ready ?d2))
						(not (hand-free ?w))(tray-taken)(not (tray-empty))
						(tray-taken-waiter ?w)
						(order-carried ?d1 ?w) (order-carried ?d2 ?w)
						(has2 ?w)
				)
	)
	(:action pick-3-tray   
        :parameters		(?t - place ?w - waiter ?d3 - drink)
        :precondition	(and (has2 ?w)(is-bar ?t)(at-waiter ?w ?t)
							(>= (time-waiter ?w)(time-drink-ready ?d3))
							(order-ready ?d3)
						)
        :effect (and  (not(order-ready ?d3))
						(order-carried ?d3 ?w)
						(not (has2 ?w)) (has3 ?w)
				)
	)
	
	(:action put-down-3-drink   
        :parameters		(?t - place ?w - waiter ?d3 - drink)
        :precondition	(and (has3 ?w)(at-waiter ?w ?t)
							(ordered ?d3 ?t)
							(order-carried ?d3 ?w)
							(<= 4 (* (fl-hot ?d)(- (time-waiter ?w) (time-drink-ready ?d))))
						)
        :effect (and  (not (order-carried ?d3 ?w))
						(order-delivered ?d3)
						(not (has3 ?w)) (has2 ?w)
				)
	)
	
	(:action put-down-2-drink   
        :parameters		(?t - place ?w - waiter ?d2 - drink)
        :precondition	(and (has2 ?w)(at-waiter ?w ?t)
							(ordered ?d2 ?t)
							(order-carried ?d2 ?w)
							(<= 4 (* (fl-hot ?d)(- (time-waiter ?w) (time-drink-ready ?d))))
						)
        :effect (and  (not (order-carried ?d2 ?w))
						(order-delivered ?d2)
						(not (has2 ?w)) (has1 ?w)
				)
	)
	(:action put-down-1-drink   
        :parameters		(?t - place ?w - waiter ?d1 - drink)
        :precondition	(and (has1 ?w)(at-waiter ?w ?t)
							(ordered ?d1 ?t)
							(order-carried ?d1 ?w)
							(<= 4 (* (fl-hot ?d)(- (time-waiter ?w) (time-drink-ready ?d))))
						)
        :effect (and  (not (order-carried ?d1 ?w))
						(order-delivered ?d1)
						(not (has1 ?w))
						(tray-empty)
				)
	)
	(:action drop-tray   
        :parameters		(?t - place ?w - waiter)
        :precondition	(and (is-bar ?t)(tray-empty)(at-waiter ?w ?t)
							(tray-taken-waiter w)
						)
        :effect (and  (not (tray-taken-waiter w))
						(not (tray-taken))
						(hand-free w)
				)
	)
)
       
